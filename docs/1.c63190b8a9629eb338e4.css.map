{"version":3,"sources":["C:/Users/BenjaminDehli/Repos/arkade-statistikk/src/src/App.vue","C:/Users/BenjaminDehli/Repos/arkade-statistikk/src/pages/src/pages/Start.vue"],"names":[],"mappings":"AAaA,KACA,6BAAA,CACA,iBAAA,CAEA,UAAA,CACA,QACA,CACA,UAJA,WAMA,CACA,GACA,cAAA,CACA,gBAAA,CAGA,QACA,CACA,aAJA,eAAA,CACA,kCAUA,CAPA,UAGA,cAAA,CACA,gBAAA,CACA,qBAAA,CACA,aACA,CACA,iBACA,kBACA,CC0ZA,QACA,4CAAA,CAEA,oCAAA,CACA,cAAA,CACA,eAAA,CACA,UAAA,CACA,WAAA,CACA,KACA,CAIA,eAFA,WAKA,CAHA,MACA,mBAAA,CAAA,mBAAA,CAAA,YAEA,CACA,MACA,WAAA,CACA,sCAAA,CAEA,wBACA,CACA,WAHA,eAUA,CAPA,KACA,kBAAA,CAAA,UAAA,CAAA,MAAA,CACA,wBAAA,CACA,WAAA,CACA,aAAA,CAEA,wBACA,CACA,MACA,iBAAA,CACA,gCAAA,CACA,YAAA,CACA,qBAAA,CACA,kBACA,CAEA,QACA,eAAA,CACA,QACA,CACA,iBACA,cAAA,CACA,cAAA,CACA,aAAA,CACA,cACA,CAEA,iBACA,gBAAA,CACA,cAAA,CACA,aAAA,CAGA,mDAAA,CAAA,2CACA,CAEA,uBACA,wBACA,CAEA,YACA,cACA,CAEA,mBACA,WAAA,CACA,oBACA,CAEA,6BACA,WAAA,CACA,oBACA,CAEA,kCAEA,YACA,CAEA,uDAEA,iBACA,CACA,uDAEA,iBACA,CAEA,iBACA,WAAA,CACA,iBAAA,CACA,4BACA,CACA,6BACA,oBACA,CACA,uBACA,eAAA,CACA,qBAAA,CAEA,cAAA,CACA,oBAAA,CACA,wBACA,CACA,iBACA,YACA","file":"1.c63190b8a9629eb338e4.css","sourcesContent":["<template>\n  <div id='app'>\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"App\"\n};\n</script>\n\n<style>\nbody {\n  font-family: \"Roboto\", sans-serif;\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  margin: 0;\n}\n#app {\n  height: 100%;\n}\nh1 {\n  font-size: 20px;\n  line-height: 28px;\n  font-weight: 400;\n  -webkit-font-smoothing: antialiased;\n  margin: 0;\n}\n.subtitle {\n  font-weight: 400;\n  -webkit-font-smoothing: antialiased;\n  font-size: 13px;\n  line-height: 20px;\n  color: rgba(0, 0, 0, 0.55);\n  display: block;\n}\n.title-container {\n  margin-bottom: 32px;\n}\n</style>\n\n","<template>\r\n  <div class='content'>\r\n    <div class='navbar'>\r\n      <div class='input-container'>\r\n        <datepicker\r\n          placeholder='Start Date'\r\n          v-model='startDate'\r\n          name='start-date'\r\n          class='datepicker'\r\n        ></datepicker>\r\n        <datepicker placeholder='End Date' v-model='endDate' name='end-date' class='datepicker'></datepicker>\r\n        <label>\r\n          <input type='checkbox' v-on:click='noDate = !noDate' v-bind:checked='noDate'>Lifetime\r\n        </label>\r\n      </div>\r\n    </div>\r\n    <div class='flex'>\r\n      <aside>\r\n        <br>\r\n        <div class='sidebar-element-section offset-left-0'>\r\n          <span class='sidebar-element-section-title'>Charts</span>\r\n          <ul class='facets'>\r\n            <li>\r\n              <label>\r\n                <input type='checkbox' v-model='selectedCharts.processingSessionsByDate'>\r\n                Processing sessions per day\r\n              </label>\r\n            </li>\r\n            <li>\r\n              <label>\r\n                <input type='checkbox' v-model='selectedCharts.failingTestsByTestId'>\r\n                Failing tests per test ID\r\n              </label>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class='sidebar-element-section'>\r\n          <span class='sidebar-element-section-title'>Filters</span>\r\n          <div\r\n            v-if='facets && facets.organization'\r\n            v-bind:class='expandedFacets.organization ? \"expanded\" : \"collapsed\"'\r\n            class='offset-left-0'\r\n          >\r\n            <span\r\n              class='sidebar-element expandable'\r\n              v-on:click='expandedFacets.organization = !expandedFacets.organization'\r\n            >Organization:</span>\r\n            <ul class='facets'>\r\n              <li v-for='organization in facets.organization' v-bind:key='organization.id'>\r\n                <label>\r\n                  <input\r\n                    type='checkbox'\r\n                    v-on:click='toggleSelectedFacet(\"organization\", organization.id)'\r\n                  >\r\n                  {{ organization.name }}\r\n                </label>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          <div\r\n            v-if='facets && facets.arkadeClient'\r\n            v-bind:class='expandedFacets.arkadeClient ? \"expanded\" : \"collapsed\"'\r\n            class='offset-left-0'\r\n          >\r\n            <span\r\n              class='sidebar-element expandable'\r\n              v-on:click='expandedFacets.arkadeClient = !expandedFacets.arkadeClient'\r\n            >Arkade client:</span>\r\n            <div\r\n              v-if='facets.arkadeClient.operatingSystem'\r\n              v-bind:class='expandedFacets.operatingSystem ? \"expanded\" : \"collapsed\"'\r\n              class='offset-left-1'\r\n            >\r\n              <span\r\n                class='sidebar-element expandable'\r\n                v-on:click='expandedFacets.operatingSystem = !expandedFacets.operatingSystem'\r\n              >Operating system</span>\r\n              <ul class='facets'>\r\n                <li\r\n                  v-for='operatingSystem in facets.arkadeClient.operatingSystem'\r\n                  v-bind:key='operatingSystem'\r\n                >\r\n                  <label>\r\n                    <input type='checkbox'>\r\n                    {{ operatingSystem }}\r\n                  </label>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n\r\n            <div\r\n              v-if='facets.arkadeClient.userInterface'\r\n              v-bind:class='expandedFacets.userInterface ? \"expanded\" : \"collapsed\"'\r\n              class='offset-left-1'\r\n            >\r\n              <span\r\n                class='sidebar-element expandable'\r\n                v-on:click='expandedFacets.userInterface = !expandedFacets.userInterface'\r\n              >User interface</span>\r\n              <ul class='facets'>\r\n                <li\r\n                  v-for='userInterface in facets.arkadeClient.userInterface'\r\n                  v-bind:key='userInterface'\r\n                >\r\n                  <label>\r\n                    <input type='checkbox'>\r\n                    {{ userInterface }}\r\n                  </label>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n\r\n            <div\r\n              v-if='facets.arkadeClient.version'\r\n              v-bind:class='expandedFacets.version ? \"expanded\" : \"collapsed\"'\r\n              class='offset-left-1'\r\n            >\r\n              <span\r\n                class='sidebar-element expandable'\r\n                v-on:click='expandedFacets.version = !expandedFacets.version'\r\n              >Version</span>\r\n              <ul class='facets'>\r\n                <li v-for='version in facets.arkadeClient.version' v-bind:key='version'>\r\n                  <label>\r\n                    <input type='checkbox'>\r\n                    {{ version }}\r\n                  </label>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            v-if='facets && facets.processingSession'\r\n            class='offset-left-0'\r\n            v-bind:class='expandedFacets.processingSession ? \"expanded\" : \"collapsed\"'\r\n          >\r\n            <span\r\n              class='sidebar-element expandable'\r\n              v-on:click='expandedFacets.processingSession = !expandedFacets.processingSession'\r\n            >Processing session</span>\r\n\r\n            <div\r\n              v-if='facets.processingSession.archiveSource'\r\n              v-bind:class='expandedFacets.archiveSource ? \"expanded\" : \"collapsed\"'\r\n              class='offset-left-1'\r\n            >\r\n              <span\r\n                class='sidebar-element expandable'\r\n                v-on:click='expandedFacets.archiveSource = !expandedFacets.archiveSource'\r\n              >Archive source</span>\r\n              <ul class='facets'>\r\n                <li\r\n                  v-for='archiveSource in facets.processingSession.archiveSource'\r\n                  v-bind:key='archiveSource'\r\n                >\r\n                  <label>\r\n                    <input type='checkbox'>\r\n                    {{ archiveSource }}\r\n                  </label>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n\r\n            <div\r\n              v-if='facets.processingSession.archiveType'\r\n              v-bind:class='expandedFacets.archiveType ? \"expanded\" : \"collapsed\"'\r\n              class='offset-left-1'\r\n            >\r\n              <span\r\n                class='sidebar-element expandable'\r\n                v-on:click='expandedFacets.archiveType = !expandedFacets.archiveType'\r\n              >Archive type</span>\r\n              <ul class='facets'>\r\n                <li\r\n                  v-for='archiveType in facets.processingSession.archiveType'\r\n                  v-bind:key='archiveType'\r\n                >\r\n                  <label>\r\n                    <input type='checkbox'>\r\n                    {{ archiveType }}\r\n                  </label>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </aside>\r\n      <main class='container'>\r\n        <div class='graph-container'>\r\n          <div class='card' v-if='selectedCharts.processingSessionsByDate'>\r\n            <processing-sessions-by-date\r\n              v-bind:start-date='startDate'\r\n              v-bind:end-date='endDate'\r\n              v-bind:selected-facets='selectedFacets'\r\n            ></processing-sessions-by-date>\r\n          </div>\r\n          <div class='card' v-if='selectedCharts.failingTestsByTestId'>\r\n            <failing-tests-by-test-id\r\n              v-bind:start-date='startDate'\r\n              v-bind:end-date='endDate'\r\n              v-bind:selected-facets='selectedFacets'\r\n            ></failing-tests-by-test-id>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport Datepicker from \"vuejs-datepicker\";\r\nimport ProcessingSessionsByDate from \"../components/charts/ProcessingSessionsByDate\";\r\nimport FailingTestsByTestId from \"../components/charts/FailingTestsByTestId\";\r\nimport { dateToYear, dateToDay, dateBeautify } from \"../utils/dateFormatter\";\r\nimport { removeDuplicate, groupData } from \"../utils/downloadFormatter\";\r\nimport dummydata from \"../data/dummydata.json\";\r\nexport default {\r\n  components: {\r\n    Datepicker,\r\n    ProcessingSessionsByDate,\r\n    FailingTestsByTestId\r\n  },\r\n  data() {\r\n    return {\r\n      dummydata: dummydata,\r\n      startDate: null,\r\n      endDate: null,\r\n      noDate: false,\r\n      facets: null,\r\n      selectedCharts: {\r\n        processingSessionsByDate: true,\r\n        failingTestsByTestId: true\r\n      },\r\n      selectedFacets: {\r\n        organization: [],\r\n        arkadeClient: [],\r\n        operatingSystem: [],\r\n        userInterface: [],\r\n        version: [],\r\n        processingSession: [],\r\n        archiveSource: [],\r\n        archiveType: []\r\n      },\r\n      expandedFacets: {\r\n        organization: true,\r\n        arkadeClient: true,\r\n        operatingSystem: true,\r\n        userInterface: true,\r\n        version: true,\r\n        processingSession: true,\r\n        archiveSource: true,\r\n        archiveType: true\r\n      }\r\n    };\r\n  },\r\n  watch: {\r\n    noDate() {\r\n      if (this.noDate) {\r\n        this.startDate = null;\r\n        this.endDate = null;\r\n      }\r\n    },\r\n    startDate() {\r\n      if (this.startDate) {\r\n        this.noDate = false;\r\n      } else if (this.endDate) {\r\n        this.noDate = true;\r\n      }\r\n    },\r\n    endDate() {\r\n      if (this.endDate) {\r\n        this.noDate = false;\r\n      } else if (this.startDate) {\r\n        this.noDate = true;\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    _endDate() {\r\n      return this.endDate ? moment(this.endDate).format(\"YYYY-MM-DD\") : null;\r\n    },\r\n    _startDate() {\r\n      return this.startDate\r\n        ? moment(this.startDate).format(\"YYYY-MM-DD\")\r\n        : null;\r\n    },\r\n    period() {\r\n      return this.startDate\r\n        ? `${this._startDate}:${this._endDate}`\r\n        : \"last-month\";\r\n    },\r\n    formattedPeriod() {\r\n      return this.startDate\r\n        ? `${dateBeautify(this._startDate)} - ${dateBeautify(this._endDate)}`\r\n        : \"last-month\";\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getFacets();\r\n    if (this.$route.params.package) {\r\n    }\r\n  },\r\n  methods: {\r\n    resetState() {\r\n      this.loaded = false;\r\n    },\r\n    enumerateDaysBetweenDates(startDate, endDate) {\r\n      var dates = [];\r\n      var currDate = moment(startDate).startOf(\"day\");\r\n      var lastDate = moment(endDate).startOf(\"day\");\r\n      while (currDate.add(1, \"days\").diff(lastDate) < 0) {\r\n        let date = currDate.clone().toDate();\r\n        dates.push(moment(date).format(\"YYYY-MM-DD\"));\r\n      }\r\n      return dates;\r\n    },\r\n    showProcessingSessionsByStartDate() {\r\n      this.chart = this.getProcessingSessionsByDate();\r\n      this.loaded = true;\r\n    },\r\n    pushIfNotExists(array, value) {\r\n      if (array.findIndex(arrayElement => arrayElement === value) === -1) {\r\n        array.push(value);\r\n      }\r\n      return array;\r\n    },\r\n    removeSelectedFacet(facetType, facetId) {\r\n      if (this.selectedFacets[facetType]) {\r\n        const selectedFacetIndex = this.selectedFacets[facetType].indexOf(\r\n          facetId\r\n        );\r\n        if (selectedFacetIndex !== -1)\r\n          this.selectedFacets[facetType].splice(selectedFacetIndex, 1);\r\n      }\r\n    },\r\n    addSelectedFacet(facetType, facetId) {\r\n      if (!this.selectedFacets[facetType]) {\r\n        this.selectedFacets[facetType] = [];\r\n      }\r\n      this.selectedFacets[facetType].push(facetId);\r\n    },\r\n    toggleSelectedFacet(facetType, facetId) {\r\n      this.facetIsSelected(facetType, facetId)\r\n        ? this.removeSelectedFacet(facetType, facetId)\r\n        : this.addSelectedFacet(facetType, facetId);\r\n    },\r\n    facetIsSelected(facetType, facetId) {\r\n      if (!this.selectedFacets[facetType]) return false;\r\n      else\r\n        return this.selectedFacets[facetType].filter(selectedFacetId => {\r\n          return facetId === selectedFacetId;\r\n        }).length;\r\n    },\r\n    getFacets() {\r\n      this.facets = {\r\n        organization: [],\r\n        arkadeClient: {\r\n          operatingSystem: [],\r\n          userInterface: [],\r\n          version: []\r\n        },\r\n        processingSession: {\r\n          archiveSource: [],\r\n          archiveType: []\r\n        }\r\n      };\r\n      this.dummydata.organizations.forEach(organization => {\r\n        this.facets.organization.push({\r\n          id: organization.id,\r\n          name: `${organization.name} (${organization.type})`\r\n        });\r\n        organization.arkadeClients.forEach(arkadeClient => {\r\n          this.facets.arkadeClient.operatingSystem = this.pushIfNotExists(\r\n            this.facets.arkadeClient.operatingSystem,\r\n            arkadeClient.operatingSystem\r\n          );\r\n          this.facets.arkadeClient.userInterface = this.pushIfNotExists(\r\n            this.facets.arkadeClient.userInterface,\r\n            arkadeClient.userInterface\r\n          );\r\n          this.facets.arkadeClient.version = this.pushIfNotExists(\r\n            this.facets.arkadeClient.version,\r\n            arkadeClient.version\r\n          );\r\n\r\n          arkadeClient.processingSessions.forEach(processingSession => {\r\n            this.facets.processingSession.archiveSource = this.pushIfNotExists(\r\n              this.facets.processingSession.archiveSource,\r\n              processingSession.archiveSource\r\n            );\r\n            this.facets.processingSession.archiveType = this.pushIfNotExists(\r\n              this.facets.processingSession.archiveType,\r\n              processingSession.archiveType\r\n            );\r\n          });\r\n        });\r\n      });\r\n    },\r\n    requestData() {\r\n      if (\r\n        this.package === null ||\r\n        this.package === \"\" ||\r\n        this.package === \"undefined\"\r\n      ) {\r\n        this.showError = true;\r\n        return;\r\n      }\r\n      this.resetState();\r\n      axios\r\n        .get(\r\n          `https://api.npmjs.org/downloads/range/${this.period}/${this.package}`\r\n        )\r\n        .then(response => {\r\n          this.rawData = response.data.downloads;\r\n          this.downloads = response.data.downloads.map(\r\n            entry => entry.downloads\r\n          );\r\n          this.labels = response.data.downloads.map(entry => entry.day);\r\n          this.packageName = response.data.package;\r\n          this.formatYear();\r\n          this.setURL();\r\n          this.loaded = true;\r\n        })\r\n        .catch(err => {\r\n          this.errorMessage = err.response.data.error;\r\n          this.showError = true;\r\n        });\r\n    },\r\n    setURL() {\r\n      history.pushState(\r\n        { info: `npm-stats ${this.package}` },\r\n        this.package,\r\n        `/#/${this.package}`\r\n      );\r\n    },\r\n    formatYear() {\r\n      this.labelsYear = this.rawData\r\n        .map(entry => dateToYear(entry.day))\r\n        .reduce(removeDuplicate, []);\r\n      this.downloadsYear = groupData(this.rawData, dateToYear);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.navbar {\r\n  -webkit-box-shadow: 0 2px 5px rgba(0, 0, 0, 0.26);\r\n  -moz-box-shadow: 0 2px 5px rgba(0, 0, 0, 0.26);\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.26);\r\n  position: fixed;\r\n  background: #fff;\r\n  width: 100%;\r\n  height: 76px;\r\n  top: 0;\r\n}\r\n.content {\r\n  height: 100%;\r\n}\r\n.flex {\r\n  display: flex;\r\n  height: 100%;\r\n}\r\naside {\r\n  width: 300px;\r\n  border-right: 1px solid rgba(0, 0, 0, 0.12);\r\n  margin-top: 76px;\r\n  height: calc(100% - 76px);\r\n}\r\nmain {\r\n  flex: 1;\r\n  background-color: #f4f4f4;\r\n  height: 100%;\r\n  overflow: auto;\r\n  margin-top: 76px;\r\n  height: calc(100% - 76px);\r\n}\r\n.card {\r\n  border-radius: 4px;\r\n  border: 1px solid rgba(0, 0, 0, 0.12);\r\n  padding: 24px;\r\n  background-color: #ffffff;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.facets {\r\n  list-style: none;\r\n  margin: 0;\r\n}\r\n.facets li label {\r\n  padding: 0 16px;\r\n  font-size: 12pt;\r\n  display: block;\r\n  cursor: pointer;\r\n}\r\n\r\n.sidebar-element {\r\n  line-height: 24pt;\r\n  font-size: 14pt;\r\n  display: block;\r\n  -moz-transition: background-color 0.2s ease-in-out;\r\n  -o-transition: background-color 0.2s ease-in-out;\r\n  transition: background-color 0.2s ease-in-out;\r\n}\r\n\r\n.sidebar-element:hover {\r\n  background-color: #f0f1f2;\r\n}\r\n\r\n.expandable {\r\n  cursor: pointer;\r\n}\r\n\r\n.expandable:before {\r\n  content: \"►\";\r\n  display: inline-block;\r\n}\r\n\r\n.expanded > .expandable:before {\r\n  content: \"▼\";\r\n  display: inline-block;\r\n}\r\n\r\n.collapsed > .facets,\r\n.collapsed > div {\r\n  display: none;\r\n}\r\n\r\n.offset-left-0 .sidebar-element,\r\n.offset-left-0 .facets {\r\n  padding-left: 16px;\r\n}\r\n.offset-left-1 .sidebar-element,\r\n.offset-left-1 .facets {\r\n  padding-left: 32px;\r\n}\r\n\r\n.input-container {\r\n  padding: 8px;\r\n  text-align: center;\r\n  border-bottom: 1px solid #ccc;\r\n}\r\n.input-container .datepicker {\r\n  display: inline-block;\r\n}\r\n.input-container input {\r\n  padding: 1.25rem;\r\n  background-color: #fff;\r\n  border: 1px solid #e8e9ed;\r\n  font-size: 1rem;\r\n  display: inline-block;\r\n  border: 1px solid #e8e9ed;\r\n}\r\n.graph-container {\r\n  padding: 16px;\r\n}\r\n</style>\r\n"]}